Given an array arr, return the second largest distinct element from an array. If the second largest element doesn't exist then return -1.

```
//{ Driver Code Starts
// Initial Template for Java
import java.io.*;
import java.util.*;
import java.util.stream.Collectors;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int t = Integer.parseInt(sc.nextLine());
        while (t-- > 0) {
            String[] arr1Str = sc.nextLine().split(" ");
            int[] arr = Arrays.stream(arr1Str).mapToInt(Integer::parseInt).toArray();
            Solution ob = new Solution();
            int ans = ob.getSecondLargest(arr);
            System.out.println(ans);
        }
    }
}

// } Driver Code Ends


// User function Template for Jav
class Solution {
    public int getSecondLargest(int[] arr) {
        // Code Here
        int n = arr.length;
        if(n < 2) return -1;
        int first = Integer.MIN_VALUE;
        int second = Integer.MIN_VALUE;
        for(int i : arr)
        {
            if(i > first ){
                second = first;
                first = i;
            }
            else if(i > second && (i != first)){
                second = i;
            }
             
        }
        return (second > 1) ? second : -1;
    }
}

```
